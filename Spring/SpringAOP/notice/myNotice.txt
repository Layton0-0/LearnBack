	- com.test01: 일반클래스를 통해 아웃풋 화면을 핵심, 공통으로 구현한 것을 확인
					여러개의 클래스 로직을 핵심과 공통으로 구현됨을 확인

	- com.test02: 핵심코드를 재정의, 공통 코드 작성을 MyAspect클래스를 이용해서 메소드 가로채기를 구현한 다음 플로어를 작성했다.
					핵심 로직을 다형성으로 설계 공통로직을 Aspect이용해서 실행시점을 포인트 컷을 통해 설정했다.
	
	AOP 컨테이너가 구현한 클래스를 이용해서 <bean/>으로 연동
	
		<bean id="myAdvisor" class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
		
		<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
		
	- com.test03: @로 설정하는 방법
	
	- com.test04: 